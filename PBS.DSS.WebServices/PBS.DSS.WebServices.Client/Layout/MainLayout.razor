@inherits LayoutComponentBase

<CascadingValue Value="IsDarkMode">
    <MudProviders />
</CascadingValue>

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <MudSpacer />
        <MudStack Row="true">
            <MudToggleIconButton Style="color:white;"
                                 Toggled="IsDarkMode"
                                 ToggledChanged="ToggleTheme"
                                 ToggledIcon="@Icons.Material.Filled.DarkMode"
                                 Icon="@Icons.Material.Filled.LightMode" />
            <MudButton Class="mud-appbar-button" Variant="Variant.Text" OnClick="SetLanguageEN">EN</MudButton>
            <MudButton Class="mud-appbar-button" Variant="Variant.Text" OnClick="SetLanguageFR">FR</MudButton>
        </MudStack>
    </MudAppBar>
    <MudMainContent>
        <MudGrid Justify="Justify.Center" Class="pt-2">
            <MudItem xs="11" md="11" lg="7">
                <MudContainer MaxWidth="MaxWidth.Large" Class="main-container justify-center align-center">
                    <MudPageBanner Banner="@SharedStateService.GetBanner()" />
                    @Body
                </MudContainer>
            </MudItem>
        </MudGrid>
    </MudMainContent>
</MudLayout>

@code {
    private bool IsDarkMode { get; set; } = true;

    private async Task SetLanguageEN() { await SetCulture("en-CA"); }
    private async Task SetLanguageFR() { await SetCulture("fr-CA"); }

    protected async override Task OnInitializedAsync()
    {
        if (IsDarkMode != await SessionStorageService.IsDarkMode()) await ToggleTheme();

        //Debug Code
        var banner = await httpClient.GetByteArrayAsync("abcmotors.png");
        SharedStateService.SetBanner(Convert.ToBase64String(banner));
    }

    protected override void OnInitialized()
    {
        SharedStateService.OnRefreshMainLayout = StateHasChanged;
    }

    private async Task SetCulture(string c)
    {
        var cInfo = System.Globalization.CultureInfo.GetCultureInfo(c);

        if (System.Globalization.CultureInfo.CurrentCulture.Name == cInfo.Name) return;

        await SessionStorageService.SetSessionCulture(cInfo.Name);

        NavigationManager.Refresh();
    }

    private async Task ToggleTheme()
    {
        IsDarkMode = !IsDarkMode;

        await InterOpService.ToggleTheme(IsDarkMode);
        await SessionStorageService.SetDarkMode(IsDarkMode);
    }
}