@page "/CustomerAttachment"
@page "/CustomerAttachment/{SerialNumber}/{WorkItemRef}/{NotificationRef}"

<MudSessionErrorWrapper ValidateSession="ValidateParams" Initialized="Initialize">
    <Content>
        <MudStack>
            <MudButton Style="align-self:center; width:30%"
                       Variant="Variant.Filled"
                       Color="Color.Tertiary"
                       OnClick="ViewRecommendations">
                View Your Recommendations
            </MudButton>
            <MudSpacer />
            <MudAttachmentCarousel Attachments="Attachments" />
            <MudSpacer/>
        </MudStack>
    </Content>
</MudSessionErrorWrapper>

@code {
    [CascadingParameter]
    private SessionInfo SessionInfo { get; set; } = new();

    [Parameter]
    public string SerialNumber { get; set; } = string.Empty;
    [Parameter]
    public string WorkItemRef { get; set; } = string.Empty;
    [Parameter]
    public string NotificationRef { get; set; } = string.Empty;

    private List<Attachment> Attachments { get; set; } = new();

    protected void Initialize()
    {
        var attachment = new Attachment();
        attachment.Name = "Banner";
        attachment.FileType = FileTypes.Image;
        attachment.Content = Convert.FromBase64String(SessionInfo.Banner);

        Attachments.Add(attachment);
    }

    private bool ValidateParams()
    {
        return true; //debug code

        if (!SessionInfo.ValidateSerialNumber(SerialNumber)) return false;
        if (!SessionInfo.ValidateServiceOrderRef(WorkItemRef, out Guid parsedWorkItemRef)) return false;

        if (NotificationRef.IsNullOrWhitespace())
        {
            SessionInfo.AddError("We were unable to find the attachments.");
            return false;   
        }

        return true;
    }

    private void ViewRecommendations()
    {
        NavigationManager.NavigateTo($"/WaitingForApproval/{SerialNumber}/{WorkItemRef}");
    }
}
